name: Deploy to AWS

on:
  push:
    branches:
      - main  # Change to your deployment branch if needed

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests (lint, unit, integration)
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2  # Update if you're using a different region

      - name: Create deployment package
        run: |
          zip -r deploy-package.zip . -x "*.git*" "node_modules/*" "tests/*"

      - name: Upload deployment package to S3
        run: |
          aws s3 cp deploy-package.zip s3://acebook-eps/deploy-package.zip

      - name: Create CodeDeploy deployment
        id: deploy
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name acebook-eps \
            --deployment-group-name acebook-eps-deploy-group \
            --s3-location bucket=acebook-eps,key=deploy-package.zip,bundleType=zip \
            --region eu-west-2 \
            --query "deploymentId" --output text)
          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "deployment_id=$DEPLOYMENT_ID" >> "$GITHUB_OUTPUT"

      - name: Wait for deployment to complete
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment_id }}
